name: Deploy to GitHub Pages

on:
  # main 브랜치에 push될 때 자동 실행
  push:
    branches:
      - main

  # 수동으로도 실행 가능
  workflow_dispatch:

# GitHub Pages 배포 권한 설정
permissions:
  contents: read
  pages: write
  id-token: write

# 동시 배포 방지
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: 'latest'

      - name: Extract Raylib WebAssembly
        run: |
          mkdir -p raylib-wasm
          unzip -q raylib-5.0_webassembly.zip -d raylib-wasm/
          cd raylib-wasm
          ln -sf raylib-5.0_webassembly/include include
          ln -sf raylib-5.0_webassembly/lib lib

      - name: Build WebAssembly
        run: |
          make -f Makefile.web

      - name: Prepare deployment files
        run: |
          mkdir -p _site
          cp build/web/particle_storm.html _site/
          cp build/web/particle_storm.js _site/
          cp build/web/particle_storm.wasm _site/

          # Create index.html redirect
          cat > _site/index.html << 'EOL'
          <!DOCTYPE html>
          <html>
          <head>
              <meta http-equiv="refresh" content="0; url=particle_storm.html">
              <title>Particle Storm</title>
          </head>
          <body>
              <p>Redirecting to <a href="particle_storm.html">Particle Storm</a>...</p>
          </body>
          </html>
          EOL

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
